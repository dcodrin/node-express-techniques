{
  "version": 3,
  "sources": [
    "meadowlark.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "meadowlark-compiled.js",
  "sourcesContent": [
    "import express from 'express';\nimport handlebars from'express-handlebars';\nimport bodyParser from 'body-parser';\nimport formidable from 'formidable';\nimport cookieParser from 'cookie-parser';\nimport expressSession from 'express-session';\n\nimport credentials from './credentials';\n\nconst app = express();\n\n//handlebars helpers\nconst helpers = {\n    section: function (name, options) {\n        if (!this._sections) {\n            this._sections = {};\n        }\n        this._sections[name] = options.fn(this);\n        return null;\n    }\n};\n//api helpers\nconst validateEmail = (email) => {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n};\n\n//set up handlebars  view engine\nconst engine = handlebars.create({defaultLayout: 'main', helpers}).engine;\napp.engine('handlebars', engine);\napp.set('view engine', 'handlebars');\n\napp.set('port', process.env.PORT || 3000);\n\n//serve static content\napp.use(express.static(__dirname + '/public'));\n\n// parse application/x-www-form-urlencoded\napp.use(bodyParser.urlencoded({extended: true}));\n\n// parse application/json\napp.use(bodyParser.json());\n\n//parse cookies, pass cookie secret as argument\napp.use(cookieParser(credentials.cookieSecret));\n\napp.use(expressSession({\n    resave: false,\n    saveUninitialized: false,\n    secret: credentials.cookieSecret\n}));\n\n//test middleware\napp.use((req, res, next) => {\n    res.locals.showTests = app.get('env') !== 'production' && req.query.test === '1';\n    next();\n});\n\n//flash messages\n//NOTE: to display flash messages make sure to redirect after setting the message\napp.use((req, res, next) => {\n    //if there's a flash message, transfer it to the context then clear it\n    res.locals.flash = req.session.flash;\n    delete req.session.flash;\n    next();\n});\n\napp.get('/', (req, res) => {\n    res.render('home');\n});\n\napp.get('/about', (req, res) => {\n    res.render('about', {pageTestScript: '/qa/tests-about.js'});\n});\n\napp.get('/tours/hood-river', (req, res) => {\n    res.render('tours/hood-river');\n});\n\napp.get('/tours/oregon-coast', (req, res) => {\n    res.render('tours/oregon-coast');\n});\n\n\napp.get('/tours/request-group-rate', (req, res) => {\n    res.render('tours/request-group-rate');\n});\n\napp.get('/newsletter', (req, res) => {\n    res.render('newsletter', {csrf: 'CSRF token goes here'});\n});\n\napp.post('/newsletter', (req, res) => {\n    const {email, name} = req.body;\n    if(!validateEmail(email)) {\n        if(req.xhr) {\n            return res.json({error: 'Invalid email address.'});\n        }\n        req.session.flash = {\n            type: 'danger',\n            intro: 'Validation error!',\n            message: 'The email address entered was not valid'\n        };\n        return res.redirect(303, '/newsletter/archive');\n    }\n});\n\napp.get('/contest/vacation-photo', (req, res) => {\n    const now = new Date();\n    res.render('contest/vacation-photo', {year: now.getUTCFullYear(), month: now.getMonth()});\n});\n\napp.post('/process', (req, res) => {\n    if (req.xhr || req.accepts('json/html') === 'json') {\n        res.send({success: true})\n    } else {\n        res.redirect(303, '/thank-you')\n    }\n});\n\napp.post('/contest/vacation-photo/:year/:month', (req, res) => {\n    const form = new formidable.IncomingForm();\n    form.parse(req, (err, fields, files) => {\n        if (err) {\n            return res.redirect(303, '/error');\n        }\n        console.log('Received fields:');\n        console.log(fields);\n        console.log('Received files');\n        console.log(files);\n        res.redirect(303, '/thank-you');\n    })\n});\n\n\napp.get('/thank-you', (req, res) => {\n    res.render('thankyou');\n});\n\n//custom 404 page\n//404 responses are not the result of an error, error-handler middleware will not capture them\n//add at the very bottom of the stack\napp.use((req, res)=> {\n    res.status(404).render('404');\n});\n\n//custom 500 page\n//error handling middleware accepts 4 arguments\napp.use((err, req, res, next) => {\n    console.error(err); // eslint-disable-line no-console\n    res.status(500).render('500');\n});\n\n\napp.listen(app.get('port'), () => {\n    console.log('Express started on http://localhost:' + app.get('port') + ';'); // eslint-disable-line no-console\n});"
  ]
}