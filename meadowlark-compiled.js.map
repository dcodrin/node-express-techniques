{
  "version": 3,
  "sources": [
    "meadowlark.js"
  ],
  "names": [],
  "mappings": ";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AASA;;;;;;AAPA;AACA,IAAM,UAAU,YAAY,OAA5B;AACA,IAAM,mBAAmB,YAAY,iBAArC;AACA,aAAG,UAAH,CAAc,OAAd,KAA0B,aAAG,SAAH,CAAa,OAAb,CAA1B;AACA,aAAG,UAAH,CAAc,gBAAd,KAAmC,aAAG,SAAH,CAAa,gBAAb,CAAnC;;AAKA,IAAM,MAAM,wBAAZ;;AAEA;AACA,IAAM,qBAAqB,0BAAW,IAAI,GAAJ,CAAQ,KAAR,CAAX,CAA3B;AACA;AACA;;AAEA;;AAEA,IAAM,aAAa,qDAAnB;;AAGA;AACA,IAAI,GAAJ,CAAQ,UAAC,GAAD,EAAM,GAAN,EAAW,IAAX,EAAoB;AACxB;AACA,QAAM,SAAS,qBAAf;AACA;AACA,WAAO,EAAP,CAAU,OAAV,EAAmB,UAAC,GAAD,EAAS;AACxB,gBAAQ,KAAR,CAAc,uBAAd,EAAuC,IAAI,KAA3C;;AAEA,YAAI;AACA;AACA,uBAAW,YAAM;AACb,wBAAQ,KAAR,CAAc,oBAAd;AACA,wBAAQ,IAAR,CAAa,CAAb;AACH,aAHD,EAGG,IAHH;;AAKA;AACA,gBAAM,SAAS,kBAAQ,MAAvB;AACA,gBAAI,MAAJ,EAAY;AACR,uBAAO,UAAP;AACH;;AAED;AACA,0BAAc,KAAd;;AAEA,gBAAI;AACA;AACA,qBAAK,GAAL;AACH,aAHD,CAGE,OAAO,GAAP,EAAY;AACV;AACA,wBAAQ,KAAR,CAAc,8BAAd,EAA8C,IAAI,KAAlD;AACA,oBAAI,MAAJ,CAAW,GAAX;AACA,oBAAI,SAAJ,CAAc,aAAd,EAA6B,YAA7B;AACA,oBAAI,GAAJ,CAAQ,cAAR;AACH;AACJ,SA1BD,CA0BE,OAAO,GAAP,EAAY;AACV,oBAAQ,KAAR,CAAc,gCAAd,EAAgD,IAAI,KAApD;AACH;AACJ,KAhCD;;AAkCA;AACA,WAAO,GAAP,CAAW,GAAX;AACA,WAAO,GAAP,CAAW,GAAX;;AAEA;AACA,WAAO,GAAP,CAAW,IAAX;AACH,CA5CD;;AA8CA;AACA,IAAI,GAAJ,CAAQ,UAAC,GAAD,EAAM,GAAN,EAAW,IAAX,EAAoB;AACxB,QAAI,kBAAQ,QAAZ,EAAsB;AAClB,gBAAQ,GAAR,aAAsB,kBAAQ,MAAR,CAAe,EAArC;AACH;AACD;AACH,CALD;;AAOA;AACA,IAAM,UAAU;AACZ,aAAS,iBAAU,IAAV,EAAgB,OAAhB,EAAyB;AAC9B,YAAI,CAAC,KAAK,SAAV,EAAqB;AACjB,iBAAK,SAAL,GAAiB,EAAjB;AACH;AACD,aAAK,SAAL,CAAe,IAAf,IAAuB,QAAQ,EAAR,CAAW,IAAX,CAAvB;AACA,eAAO,IAAP;AACH;AAPW,CAAhB;;AAUA;AACA,IAAM,SAAS,4BAAW,MAAX,CAAkB,EAAC,eAAe,MAAhB,EAAwB,gBAAxB,EAAlB,EAAoD,MAAnE;AACA,IAAI,MAAJ,CAAW,YAAX,EAAyB,MAAzB;AACA,IAAI,GAAJ,CAAQ,aAAR,EAAuB,YAAvB;;AAEA,IAAI,GAAJ,CAAQ,MAAR,EAAgB,QAAQ,GAAR,CAAY,IAAZ,IAAoB,IAApC;;AAEA;AACA,IAAI,GAAJ,CAAQ,kBAAQ,MAAR,CAAe,YAAY,SAA3B,CAAR;;AAEA;AACA,IAAI,GAAJ,CAAQ,qBAAW,UAAX,CAAsB,EAAC,UAAU,IAAX,EAAtB,CAAR;;AAEA;AACA,IAAI,GAAJ,CAAQ,qBAAW,IAAX,EAAR;;AAEA;AACA,IAAI,GAAJ,CAAQ,4BAAa,sBAAY,YAAzB,CAAR;;AAEA,IAAI,GAAJ,CAAQ,8BAAe;AACnB,YAAQ,KADW;AAEnB,uBAAmB,KAFA;AAGnB,YAAQ,sBAAY,YAHD;AAInB,WAAO,IAAI,UAAJ,CAAe,EAAC,oBAAoB,mBAAmB,UAAxC,EAAf;AAJY,CAAf,CAAR;;AAOA;AACA,IAAI,GAAJ,CAAQ,UAAC,GAAD,EAAM,GAAN,EAAW,IAAX,EAAoB;AACxB,QAAI,MAAJ,CAAW,SAAX,GAAuB,IAAI,GAAJ,CAAQ,KAAR,MAAmB,YAAnB,IAAmC,IAAI,KAAJ,CAAU,IAAV,KAAmB,GAA7E;AACA;AACH,CAHD;;AAKA;AACA;AACA,IAAI,GAAJ,CAAQ,UAAC,GAAD,EAAM,GAAN,EAAW,IAAX,EAAoB;AACxB;AACA,QAAI,MAAJ,CAAW,KAAX,GAAmB,IAAI,OAAJ,CAAY,KAA/B;AACA,WAAO,IAAI,OAAJ,CAAY,KAAnB;AACA;AACH,CALD;;AAOA,IAAI,GAAJ,CAAQ,sBAAO,KAAP,CAAR;;AAEA,IAAI,GAAJ,CAAQ,GAAR,EAAa,UAAC,GAAD,EAAM,GAAN,EAAc;AACvB,QAAI,MAAJ,CAAW,MAAX;AACH,CAFD;;AAIA,IAAI,GAAJ,CAAQ,QAAR,EAAkB,UAAC,GAAD,EAAM,GAAN,EAAc;;AAE5B;AACA;AACA;AACA;AACA,QAAI,MAAJ,CAAW,OAAX,EAAoB,EAAC,gBAAgB,oBAAjB,EAApB;AACH,CAPD;;AASA,IAAI,GAAJ,CAAQ,mBAAR,EAA6B,UAAC,GAAD,EAAM,GAAN,EAAc;AACvC,QAAI,MAAJ,CAAW,kBAAX;AACH,CAFD;;AAIA,IAAI,GAAJ,CAAQ,qBAAR,EAA+B,UAAC,GAAD,EAAM,GAAN,EAAc;AACzC,QAAI,MAAJ,CAAW,oBAAX;AACH,CAFD;;AAIA,IAAI,GAAJ,CAAQ,2BAAR,EAAqC,UAAC,GAAD,EAAM,GAAN,EAAc;AAC/C,QAAI,MAAJ,CAAW,0BAAX;AACH,CAFD;;AAIA,IAAI,GAAJ,CAAQ,aAAR,EAAuB,UAAC,GAAD,EAAM,GAAN,EAAc;AACjC,QAAI,MAAJ,CAAW,YAAX,EAAyB,EAAC,MAAM,sBAAP,EAAzB;AACH,CAFD;;AAIA,IAAI,IAAJ,CAAS,aAAT,EAAwB,UAAC,GAAD,EAAM,GAAN,EAAc;AAAA,oBACZ,IAAI,IADQ;AAAA,QAC3B,KAD2B,aAC3B,KAD2B;AAAA,QACpB,IADoB,aACpB,IADoB;;AAElC,QAAI,CAAC,wBAAc,KAAd,CAAL,EAA2B;AACvB,YAAI,IAAI,GAAR,EAAa;AACT,mBAAO,IAAI,IAAJ,CAAS,EAAC,OAAO,wBAAR,EAAT,CAAP;AACH;AACD,YAAI,OAAJ,CAAY,KAAZ,GAAoB;AAChB,kBAAM,QADU;AAEhB,mBAAO,mBAFS;AAGhB,qBAAS;AAHO,SAApB;AAKA,eAAO,IAAI,QAAJ,CAAa,GAAb,EAAkB,qBAAlB,CAAP;AACH;AACJ,CAbD;;AAeA,IAAI,GAAJ,CAAQ,YAAR,EAAsB,UAAC,GAAD,EAAM,GAAN,EAAc;AAChC,uBAAS,IAAT,CAAc,EAAC,WAAW,IAAZ,EAAd,EAAiC,UAAC,GAAD,EAAM,SAAN,EAAoB;AACjD,YAAM,UAAU;AACZ,sBAAU,IAAI,OAAJ,CAAY,QAAZ,IAAwB,KADtB;AAEZ,uBAAW,UAAU,GAAV,CAAc,oBAAY;AAAA,oBAC5B,GAD4B,GACsB,QADtB,CAC5B,GAD4B;AAAA,oBACvB,IADuB,GACsB,QADtB,CACvB,IADuB;AAAA,oBACjB,WADiB,GACsB,QADtB,CACjB,WADiB;AAAA,oBACJ,QADI,GACsB,QADtB,CACJ,QADI;AAAA,oBACM,YADN,GACsB,QADtB,CACM,YADN;;AAEjC,uBAAO,EAAC,QAAD,EAAM,UAAN,EAAY,wBAAZ,EAAyB,OAAO,SAAS,eAAT,CAAyB,yBAAe,YAAf,EAA6B,IAAI,OAAJ,CAAY,QAAzC,CAAzB,CAAhC,EAA8G,kBAA9G,EAAP;AACH,aAHU;AAFC,SAAhB;AAOA,gBAAQ,IAAI,OAAJ,CAAY,QAApB;AACI,iBAAK,KAAL;AACI,wBAAQ,WAAR,GAAsB,UAAtB;AACA;AACJ,iBAAM,KAAN;AACI,wBAAQ,WAAR,GAAsB,UAAtB;AACA;AACJ,iBAAK,KAAL;AACI,wBAAQ,WAAR,GAAsB,UAAtB;AACA;AACJ;AACI,wBAAQ,WAAR,GAAsB,UAAtB;AAXR;AAaA,YAAI,MAAJ,CAAW,WAAX,EAAwB,OAAxB;AACH,KAtBD;AAuBH,CAxBD;;AA0BA,IAAI,GAAJ,CAAQ,wBAAR,EAAkC,UAAC,GAAD,EAAM,GAAN,EAAc;AAC5C,QAAI,MAAJ,CAAW,uBAAX,EAAoC,EAAC,KAAK,IAAI,KAAJ,CAAU,GAAhB,EAApC;AACH,CAFD;;AAIA,IAAI,IAAJ,CAAS,wBAAT,EAAmC,UAAC,GAAD,EAAM,GAAN,EAAc;AAC7C,uCAAyB,MAAzB,CAAgC,EAAC,OAAO,IAAI,IAAJ,CAAS,KAAjB,EAAhC,EAAyD,EAAC,OAAO,EAAC,MAAM,IAAI,IAAJ,CAAS,GAAhB,EAAR,EAAzD,EAAwF,EAAC,QAAQ,IAAT,EAAxF,EAAwG,UAAC,GAAD,EAAS;AAC7G,YAAI,GAAJ,EAAS;AACL,oBAAQ,KAAR,CAAc,IAAI,KAAlB;AACA,gBAAI,OAAJ,CAAY,KAAZ,GAAoB;AAChB,sBAAM,QADU;AAEhB,uBAAO,OAFS;AAGhB,yBAAS;AAHO,aAApB;AAKA,gBAAI,QAAJ,CAAa,GAAb,EAAkB,YAAlB;AACH;AACD,YAAI,OAAJ,CAAY,KAAZ,GAAoB;AAChB,kBAAM,SADU;AAEhB,mBAAO,aAFS;AAGhB,qBAAS;AAHO,SAApB;AAKA,eAAO,IAAI,QAAJ,CAAa,GAAb,EAAkB,YAAlB,CAAP;AACH,KAhBD;AAiBH,CAlBD;;AAoBA,IAAI,GAAJ,CAAQ,yBAAR,EAAmC,UAAC,GAAD,EAAM,GAAN,EAAc;AAC7C,QAAM,MAAM,IAAI,IAAJ,EAAZ;AACA,QAAI,MAAJ,CAAW,wBAAX,EAAqC,EAAC,MAAM,IAAI,cAAJ,EAAP,EAA6B,OAAO,IAAI,QAAJ,EAApC,EAArC;AACH,CAHD;;AAKA,IAAI,GAAJ,CAAQ,yBAAR,EAAmC,UAAC,GAAD,EAAM,GAAN,EAAc;AAC7C,QAAI,OAAJ,CAAY,QAAZ,GAAuB,IAAI,MAAJ,CAAW,QAAlC;AACA,QAAI,QAAJ,CAAa,GAAb,EAAkB,YAAlB;AACH,CAHD;;AAKA,IAAI,IAAJ,CAAS,UAAT,EAAqB,UAAC,GAAD,EAAM,GAAN,EAAc;AAC/B,QAAI,IAAI,GAAJ,IAAW,IAAI,OAAJ,CAAY,WAAZ,MAA6B,MAA5C,EAAoD;AAChD,YAAI,IAAJ,CAAS,EAAC,SAAS,IAAV,EAAT;AACH,KAFD,MAEO;AACH,YAAI,QAAJ,CAAa,GAAb,EAAkB,YAAlB;AACH;AACJ,CAND;;AAQA,IAAI,IAAJ,CAAS,sCAAT,EAAiD,UAAC,GAAD,EAAM,GAAN,EAAc;AAC3D,QAAM,OAAO,IAAI,qBAAW,YAAf,EAAb;AACA,SAAK,KAAL,CAAW,GAAX,EAAgB,UAAC,GAAD,EAAM,MAAN,EAAc,KAAd,EAAwB;AACpC,YAAI,GAAJ,EAAS;AACL,gBAAI,OAAJ,CAAY,KAAZ,GAAoB;AAChB,sBAAM,QADU;AAEhB,uBAAO,OAFS;AAGhB,yBAAS;AAHO,aAApB;AAKA,gBAAI,QAAJ,CAAa,GAAb,EAAkB,yBAAlB;AACH;;AAED,YAAM,QAAQ,MAAM,KAApB;AACA,YAAM,MAAM,mBAAmB,GAAnB,GAAyB,KAAK,GAAL,EAArC;AACA,YAAM,OAAO,MAAM,GAAN,GAAY,MAAM,IAA/B;AACA,qBAAG,SAAH,CAAa,GAAb;AACA,qBAAG,UAAH,CAAc,MAAM,IAApB,EAA0B,MAAM,GAAN,GAAY,MAAM,IAA5C;AACA,mCAAiB,gBAAjB,EAAmC,OAAO,KAA1C,EAAiD,IAAI,MAAJ,CAAW,IAA5D,EAAkE,IAAI,MAAJ,CAAW,KAA7E,EAAoF,IAApF;AACA,YAAI,OAAJ,CAAY,KAAZ,GAAoB;AAChB,kBAAM,SADU;AAEhB,mBAAO,YAFS;AAGhB,qBAAS;AAHO,SAApB;;AAMA,gBAAQ,GAAR,CAAY,kBAAZ;AACA,gBAAQ,GAAR,CAAY,MAAZ;AACA,gBAAQ,GAAR,CAAY,gBAAZ;AACA,gBAAQ,GAAR,CAAY,KAAZ;AACA,YAAI,QAAJ,CAAa,GAAb,EAAkB,iCAAlB;AACH,KA3BD;AA4BH,CA9BD;;AAiCA,IAAI,GAAJ,CAAQ,YAAR,EAAsB,UAAC,GAAD,EAAM,GAAN,EAAc;AAChC,QAAI,MAAJ,CAAW,UAAX;AACH,CAFD;;AAIA;AACA;AACA;AACA,IAAI,GAAJ,CAAQ,UAAC,GAAD,EAAM,GAAN,EAAa;AACjB,QAAI,MAAJ,CAAW,GAAX,EAAgB,MAAhB,CAAuB,KAAvB;AACH,CAFD;;AAIA;AACA;AACA,IAAI,GAAJ,CAAQ,UAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,IAAhB,EAAyB;AAC7B,YAAQ,KAAR,CAAc,GAAd,EAD6B,CACT;AACpB,QAAI,MAAJ,CAAW,GAAX,EAAgB,MAAhB,CAAuB,KAAvB;AACH,CAHD;;AAKA,IAAM,cAAc,SAAd,WAAc,GAAM;AACtB,WAAO,IAAI,MAAJ,CAAW,IAAI,GAAJ,CAAQ,MAAR,CAAX,EAA4B,YAAM;AACrC,gBAAQ,GAAR,CAAY,wBAAwB,IAAI,GAAJ,CAAQ,KAAR,CAAxB,GAAyC,4BAAzC,GAAwE,IAAI,GAAJ,CAAQ,MAAR,CAAxE,GAA0F,GAAtG,EADqC,CACuE;AAC/G,KAFM,CAAP;AAGH,CAJD;;AAMA;AACA,IAAI,QAAQ,IAAR,KAAiB,MAArB,EAA6B;AACzB;AACA;AACH,CAHD,MAGO;AACH;AACA,WAAO,OAAP,GAAiB,WAAjB;AACH",
  "file": "meadowlark-compiled.js",
  "sourcesContent": [
    "import express from 'express';\nimport handlebars from'express-handlebars';\nimport bodyParser from 'body-parser';\nimport formidable from 'formidable';\nimport cookieParser from 'cookie-parser';\nimport expressSession from 'express-session';\nimport morgan from 'morgan';\nimport cluster from 'cluster';\nimport {create} from 'domain';\nimport {validateEmail, saveContestEntry, convertFromUSD} from './api/api';\nimport fs from 'fs';\nimport connectMongo from 'connect-mongo';\n\nimport connection from './db/connection';\nimport Vacation from './db/models/vacation';\nimport VacationInSeasonListener from './db/models/vacationInSeasonListener';\nimport seedDatabase from './db/dbseed';\n\n// Check if paths exists if not create them\nconst dataDir = __dirname + '/data';\nconst vacationPhotoDir = __dirname + '/vacation-photo';\nfs.existsSync(dataDir) || fs.mkdirSync(dataDir);\nfs.existsSync(vacationPhotoDir) || fs.mkdirSync(vacationPhotoDir);\n\n\nimport credentials from './credentials';\n\nconst app = express();\n\n// establish db connection based on environment;\nconst mongooseConnection = connection(app.get('env'));\n// seed database with data with none present\nseedDatabase();\n\n// set mongo session store through mlab\n\nconst MongoStore = connectMongo(expressSession);\n\n\n// handle uncaught errors\napp.use((req, res, next) => {\n    // create domain fro request\n    const domain = create();\n    // handle errors on domain\n    domain.on('error', (err) => {\n        console.error('DOMAIN ERROR CAUGHT\\n', err.stack);\n\n        try {\n            // failsafe shutdown in 5 seconds\n            setTimeout(() => {\n                console.error('Failsafe shutdown.');\n                process.exit(1);\n            }, 5000);\n\n            //disconnect from cluster\n            const worker = cluster.worker;\n            if (worker) {\n                worker.disconnect();\n            }\n\n            // stop taking new requests\n            startServer().close();\n\n            try {\n                // attempt to use Express error route\n                next(err);\n            } catch (err) {\n                // if Express error route fails try Node response\n                console.error('Express error route failed\\n', err.stack);\n                res.status(500);\n                res.setHeader('content-tpe', 'text/plain');\n                res.end('Server error');\n            }\n        } catch (err) {\n            console.error('Unable to send 500 response.\\n', err.stack);\n        }\n    });\n\n    // add the req and res objects to the domain\n    domain.add(req);\n    domain.add(res);\n\n    // execute the rest of the request chain\n    domain.run(next);\n});\n\n//cluster middleware to check which worker is handling request\napp.use((req, res, next) => {\n    if (cluster.isWorker) {\n        console.log(`Worker ${cluster.worker.id} received request.`)\n    }\n    next();\n});\n\n//handlebars helpers\nconst helpers = {\n    section: function (name, options) {\n        if (!this._sections) {\n            this._sections = {};\n        }\n        this._sections[name] = options.fn(this);\n        return null;\n    }\n};\n\n//set up handlebars  view engine\nconst engine = handlebars.create({defaultLayout: 'main', helpers}).engine;\napp.engine('handlebars', engine);\napp.set('view engine', 'handlebars');\n\napp.set('port', process.env.PORT || 3000);\n\n//serve static content\napp.use(express.static(__dirname + '/public'));\n\n// parse application/x-www-form-urlencoded\napp.use(bodyParser.urlencoded({extended: true}));\n\n// parse application/json\napp.use(bodyParser.json());\n\n//parse cookies, pass cookie secret as argument\napp.use(cookieParser(credentials.cookieSecret));\n\napp.use(expressSession({\n    resave: false,\n    saveUninitialized: false,\n    secret: credentials.cookieSecret,\n    store: new MongoStore({mongooseConnection: mongooseConnection.connection})\n}));\n\n//test middleware\napp.use((req, res, next) => {\n    res.locals.showTests = app.get('env') !== 'production' && req.query.test === '1';\n    next();\n});\n\n//flash messages\n//NOTE: to display flash messages make sure to redirect after setting the message\napp.use((req, res, next) => {\n    //if there's a flash message, transfer it to the context then clear it\n    res.locals.flash = req.session.flash;\n    delete req.session.flash;\n    next();\n});\n\napp.use(morgan('dev'));\n\napp.get('/', (req, res) => {\n    res.render('home');\n});\n\napp.get('/about', (req, res) => {\n\n    // Use to test domain uncaught error handling\n    // setImmediate(() => {\n    //     throw new Error('KABOOM!')\n    // });\n    res.render('about', {pageTestScript: '/qa/tests-about.js'});\n});\n\napp.get('/tours/hood-river', (req, res) => {\n    res.render('tours/hood-river');\n});\n\napp.get('/tours/oregon-coast', (req, res) => {\n    res.render('tours/oregon-coast');\n});\n\napp.get('/tours/request-group-rate', (req, res) => {\n    res.render('tours/request-group-rate');\n});\n\napp.get('/newsletter', (req, res) => {\n    res.render('newsletter', {csrf: 'CSRF token goes here'});\n});\n\napp.post('/newsletter', (req, res) => {\n    const {email, name} = req.body;\n    if (!validateEmail(email)) {\n        if (req.xhr) {\n            return res.json({error: 'Invalid email address.'});\n        }\n        req.session.flash = {\n            type: 'danger',\n            intro: 'Validation error!',\n            message: 'The email address entered was not valid'\n        };\n        return res.redirect(303, '/newsletter/archive');\n    }\n});\n\napp.get('/vacations', (req, res) => {\n    Vacation.find({available: true}, (err, vacations) => {\n        const context = {\n            currency: req.session.currency || 'USD',\n            vacations: vacations.map(vacation => {\n                let {sku, name, description, inSeason, priceInCents} = vacation;\n                return {sku, name, description, price: vacation.getDisplayPrice(convertFromUSD(priceInCents, req.session.currency)), inSeason};\n            })\n        };\n        switch (req.session.currency) {\n            case 'USD':\n                context.currencyUSD = 'selected';\n                break;\n            case  'GBP':\n                context.currencyGBP = 'selected';\n                break;\n            case 'BTC':\n                context.currencyBTC = 'selected';\n                break;\n            default:\n                context.currencyUSD = 'selected';\n        }\n        res.render('vacations', context);\n    });\n});\n\napp.get('/notify-when-in-season', (req, res) => {\n    res.render('notify-when-in-season', {sku: req.query.sku})\n});\n\napp.post('/notify-when-in-season', (req, res) => {\n    VacationInSeasonListener.update({email: req.body.email}, {$push: {skus: req.body.sku}}, {upsert: true}, (err) => {\n        if (err) {\n            console.error(err.stack);\n            req.session.flash = {\n                type: 'danger',\n                intro: 'Oops!',\n                message: 'There was an error processing your request.'\n            };\n            res.redirect(303, '/vacations');\n        }\n        req.session.flash = {\n            type: 'success',\n            intro: 'Thank you! ',\n            message: 'You will be notified when this vacation is in season.'\n        };\n        return res.redirect(303, '/vacations');\n    })\n});\n\napp.get('/contest/vacation-photo', (req, res) => {\n    const now = new Date();\n    res.render('contest/vacation-photo', {year: now.getUTCFullYear(), month: now.getMonth()});\n});\n\napp.get('/set-currency/:currency', (req, res) => {\n    req.session.currency = req.params.currency;\n    res.redirect(303, '/vacations');\n});\n\napp.post('/process', (req, res) => {\n    if (req.xhr || req.accepts('json/html') === 'json') {\n        res.send({success: true})\n    } else {\n        res.redirect(303, '/thank-you')\n    }\n});\n\napp.post('/contest/vacation-photo/:year/:month', (req, res) => {\n    const form = new formidable.IncomingForm();\n    form.parse(req, (err, fields, files) => {\n        if (err) {\n            res.session.flash = {\n                type: 'danger',\n                intro: 'Oops!',\n                message: 'There was an error processing your submission. PLease try again.'\n            };\n            res.redirect(303, '/contest/vacation-photo');\n        }\n\n        const photo = files.photo;\n        const dir = vacationPhotoDir + '/' + Date.now();\n        const path = dir + '/' + photo.name;\n        fs.mkdirSync(dir);\n        fs.renameSync(photo.path, dir + '/' + photo.name);\n        saveContestEntry('vacation-photo', fields.email, req.params.year, req.params.month, path);\n        req.session.flash = {\n            type: 'success',\n            intro: 'Good luck!',\n            message: 'You have been entered into the contest.'\n        };\n\n        console.log('Received fields:');\n        console.log(fields);\n        console.log('Received files');\n        console.log(files);\n        res.redirect(303, '/contest/vacation-photo/entries');\n    })\n});\n\n\napp.get('/thank-you', (req, res) => {\n    res.render('thankyou');\n});\n\n//custom 404 page\n//404 responses are not the result of an error, error-handler middleware will not capture them\n//add at the very bottom of the stack\napp.use((req, res)=> {\n    res.status(404).render('404');\n});\n\n//custom 500 page\n//error handling middleware accepts 4 arguments\napp.use((err, req, res, next) => {\n    console.error(err); // eslint-disable-line no-console\n    res.status(500).render('500');\n});\n\nconst startServer = () => {\n    return app.listen(app.get('port'), () => {\n        console.log('Express started in ' + app.get('env') + ' mode on http://localhost:' + app.get('port') + ';'); // eslint-disable-line no-console\n    });\n};\n\n// check to see if module is run directly as node meadowlark.js or is required in another module\nif (require.main === module) {\n    // app is run directly, run server\n    startServer();\n} else {\n    // app is imported from another file via require\n    module.exports = startServer;\n}"
  ]
}